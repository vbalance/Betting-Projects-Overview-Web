AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 + CloudFront с кастомным доменом'

Parameters:
  BucketName:
    Type: String
    Default: betting-projects-overview-web
    Description: Уникальное название S3 bucket
    
  DomainName:
    Type: String
    Default: bettechsolutions.aeoncodes.com
    Description: Кастомный домен для сайта
    
  CertificateArn:
    Type: String
    Description: ARN SSL сертификата из ACM (us-east-1)
    Default: ''

Conditions:
  HasCertificate: !Not [!Equals [!Ref CertificateArn, '']]

Resources:
  # S3 Bucket для статического хостинга
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # Политика для публичного доступа
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: S3Bucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'

  # CloudFront Distribution с кастомным доменом
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: S3BucketPolicy
    Properties:
      DistributionConfig:
        Comment: !Sub 'CDN для ${DomainName}'
        Aliases: !If
          - HasCertificate
          - [!Ref DomainName]
          - !Ref AWS::NoValue
        DefaultRootObject: index.html
        Enabled: true
        Origins:
          - Id: S3Origin
            DomainName: !Sub '${S3Bucket}.s3-website-${AWS::Region}.amazonaws.com'
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: false
          Compress: true
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        PriceClass: PriceClass_100
        ViewerCertificate: !If
          - HasCertificate
          - AcmCertificateArn: !Ref CertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - CloudFrontDefaultCertificate: true

Outputs:
  BucketName:
    Description: 'S3 Bucket Name'
    Value: !Ref S3Bucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  
  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'
  
  CloudFrontDomainName:
    Description: 'CloudFront Domain Name'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-DomainName'
  
  WebsiteURL:
    Description: 'Website URL'
    Value: !If
      - HasCertificate
      - !Sub 'https://${DomainName}'
      - !Sub 'https://${CloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'
      
  CustomDomainURL:
    Condition: HasCertificate
    Description: 'Custom Domain URL'
    Value: !Sub 'https://${DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-CustomDomainURL'
